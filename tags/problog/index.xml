<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>problog on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/problog/</link>
    <description>Recent content in problog on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Oct 2019 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/problog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(WIP) Probabilistic programming with problog</title>
      <link>https://mullikine.github.io/posts/probabilistic-programming-with-problog/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/probabilistic-programming-with-problog/</guid>
      <description>Syntactic sugar Clauses can be constructed by virtue of overloading of Python operators:
   Prolog Python English     :- &amp;lt;&amp;lt; clause   , &amp;amp; and   ; &amp;vert; or   \+ ~ not    Glossary stochastic memoization [#probabilistic programming] Remembering probabilistic events that have already occurred. Example: $MYGIT/mullikine/problog-examples/stochastic-memoisation.problog Example2: $MYGIT/mullikine/problog-examples/stochastic-memoisation-zeros.problog The reason that most sequences have probability zero, is that if it encounters the same die a second time, it will not roll it again, but reuse the (memoized) result of the previous roll.</description>
    </item>
    
  </channel>
</rss>