<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>productivity on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/productivity/</link>
    <description>Recent content in productivity on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jun 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/productivity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenAI API for NLP</title>
      <link>https://mullikine.github.io/posts/openai-api-for-nlp/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/openai-api-for-nlp/</guid>
      <description>Related articles I&amp;rsquo;d like to add some OpenAI support to emacs.
 Emacs Websockets // Bodacious Blog  API  Apply the API to any language task  semantic search, summarization, sentiment analysis, content generation, translation, and more&amp;hellip;    Use only a few examples or by specifying your task in English.
Semantic search 1 2 3 4 5 6  Semantic Search [openai-api] Allows searching over documents based on the natural-language meaning of queries rather than keyword matching.</description>
    </item>
    
    <item>
      <title>★ Automating rat, a powerful productivity tool ★</title>
      <link>https://mullikine.github.io/posts/rat/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/rat/</guid>
      <description>Source https://github.com/ericfreese/rat Tweaks https://github.com/mullikine/rat/commits/shane See also Creating a rat mode for docker // Splunky Splog Coincidence The moment I finished writing this up, the fireworks for Chinese New Year began. It&amp;rsquo;s the year of the rat! I love it! I had no idea!  I remember seeing this a few years ago but at the time I was too much of a noob.
Just recently I was playing around with docker commands when I realised it would be perfectly suited for rapidly putting together a TUI.</description>
    </item>
    
    <item>
      <title>AI-assisted coding tools for emacs</title>
      <link>https://mullikine.github.io/posts/ai-assisted-coding-tools-emacs/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/ai-assisted-coding-tools-emacs/</guid>
      <description>language-detection Emacs Lisp library that automatically detects the programming language in a buffer or string. Implemented as a random forest classifier, trained in scikit-learn and deployed to Emacs Lisp.
https://github.com/andreasjansson/language-detection.el
Example of usage 1 2 3 4 5 6 7 8 9  (defun new-buffer-from-selection-detect-language () &amp;#34;Creates a new buffer from the selection and tries to set the mode&amp;#34; (interactive) (if (selected-p) (let* ((b (new-buffer-from-string (selection)))) (with-current-buffer b (switch-to-buffer b) (guess-major-mode))))) (defalias &amp;#39;detect-language-set-mode &amp;#39;guess-major-mode)   1 2  ;; This works great (my/truly-selective-binding &amp;#34;Y&amp;#34; #&amp;#39;new-buffer-from-selection-detect-language)   expanded the macro</description>
    </item>
    
  </channel>
</rss>