<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/ruby/</link>
    <description>Recent content in ruby on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://mullikine.github.io/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing operators from other languages in elisp</title>
      <link>https://mullikine.github.io/posts/implementing-operators-from-other-languages-in-elisp/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/implementing-operators-from-other-languages-in-elisp/</guid>
      <description>Ruby https://en.wikibooks.org/wiki/Ruby%5FProgramming/Syntax/Operators
||= (double pipe) http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html
Useful for initializing with default values.
   op explanation arity precedence association     \vert\vert\eq A \vert\vert\eq B assigns B to A iff A is nil or false Binary 15 Right    1 2 3 4 5 6 7 8  (defmacro ||= (sym value) &amp;#34;Idempotent assignment operator from Ruby&amp;#34; `(progn (if (not (variable-p &amp;#39;,sym)) (setq ,sym ,value)) ,sym)) (provide &amp;#39;my-operators)   &amp;amp;&amp;amp;\eq (double ampersand equals) http://www.</description>
    </item>
    
    <item>
      <title>Ruby operators</title>
      <link>https://mullikine.github.io/posts/ruby-operators/</link>
      <pubDate>Wed, 17 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/ruby-operators/</guid>
      <description>References https://www.tutorialspoint.com/ruby/ruby%5Foperators.htm  double pipe ||= 
1 2 3  def repos @repos ||= init_repos end   ||= behaves like a || a = b i.e. it only assigns when a is not truthy.</description>
    </item>
    
  </channel>
</rss>
