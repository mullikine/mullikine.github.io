<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prolog on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/prolog/</link>
    <description>Recent content in prolog on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 May 2021 00:00:00 +1200</lastBuildDate><atom:link href="https://mullikine.github.io/tags/prolog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate graphviz and prolog from org-brain</title>
      <link>https://mullikine.github.io/posts/generate-graphviz-and-prolog-from-org-brain/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/generate-graphviz-and-prolog-from-org-brain/</guid>
      <description>Summary I would like to be creating graphs interactively with org-brain and then using them to generate graphviz, plantuml and mermaid diagrams, and also knowledge bases with prolog.
Why Prolog? Prolog is incredibly useful for querying KBs. If I plan on working for a large corporation with their own ontologies and knowledge graphs, then I will want to be skilled with Prolog.
Graphviz  --  A generated graphviz neato diagram This has been generated from an org-brain.</description>
    </item>
    
    <item>
      <title>Prolog and Natural-Language Analysis</title>
      <link>https://mullikine.github.io/posts/prolog-and-natural-language-analysis/</link>
      <pubDate>Fri, 30 Apr 2021 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/prolog-and-natural-language-analysis/</guid>
      <description>Book in question Prolog and Natural-Language Analysis by Fernando C. N. Pereira and Stuart M. Shieber (PDF) Notes on Semantic Nets and Frames http://www.eecs.qmul.ac.uk/~mmh/AINotes/AINotes4.pdf  Review This book has been interesting so far.
On reading the 1st chapter, I discovered how to build Semantic Networks in prolog.
On reading the 2nd chapter I realised I would like to make a NL parser in prolog. It would a fast way to explore building my own programmatic (as opposed to transformer-based) NL parser.</description>
    </item>
    
  </channel>
</rss>
