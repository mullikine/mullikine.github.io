<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/aws/</link>
    <description>Recent content in aws on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Apr 2021 00:00:00 +1200</lastBuildDate><atom:link href="https://mullikine.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a clojure app with terraform and AWS Cloud</title>
      <link>https://mullikine.github.io/posts/creating-a-clojure-app-with-terraform-and-aws-cloud/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/creating-a-clojure-app-with-terraform-and-aws-cloud/</guid>
      <description>Summary These are the steps I have taken to automate the process of building a Web Application in Clojure and deploying said application to an AWS cluster defined by a Terraform module.
This is a work in progress.
Original article https://dzone.com/articles/deploy-a-clojure-web-application-to-aws-using-terr
I have taken steps and copied code from this article.
Design I have chosen Clojure as the language to implement the blob uploader for the following reasons:
 It is very reliable It is easy to understand REPL workflow  Live updates   One language for both the back-end and front-end It&amp;rsquo;s the language I&amp;rsquo;m growing into for most of my work It has very good support for concurrency Access to all of Java&amp;rsquo;s libraries Access to all of Python&amp;rsquo;s libraries via clj-python/libpython-clj  I was initially working with Terraform 0.</description>
    </item>
    
    <item>
      <title>Review of &#39;Goodbye YAML: Infrastructure as Code in Clojure - Eno Compton &amp; Tyler van Hensbergen - YouTube&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-goodbye-yaml-infrastructure-as-code-in-clojure-eno-compton-tyler-van-hensbergen-youtube/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-goodbye-yaml-infrastructure-as-code-in-clojure-eno-compton-tyler-van-hensbergen-youtube/</guid>
      <description>Original article Goodbye YAML: Infrastructure as Code in Clojure - Eno Compton &amp;amp; Tyler van Hensbergen - YouTube CDK Source https://github.com/aws/aws-cdk CDK Guide https://github.com/awsdocs/aws-cdk-guide CDK CLJ cdk-clj/examples at master Stedi/cdk-clj GitHub  Install 1  npm install -g aws-cdk   npm wrapper script additions  npm install -g should not be run as sudo, so with this I can install without breaking npm.   1 2 3 4 5 6 7 8  # https://stackoverflow.</description>
    </item>
    
    <item>
      <title>Updates to the emacs glossary system</title>
      <link>https://mullikine.github.io/posts/updates-to-the-emacs-glossary-system/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/updates-to-the-emacs-glossary-system/</guid>
      <description>Key bindings    kb f      L glossary-add-link Create a link for a term to a topic. From then on, that topic&amp;rsquo;s glossary is loaded when the term is seen.   A add-to-glossary-file-for-buffer Add a new term to one of the most relevant glossaries.    Creating / adding to the ansible glossary 
Learning Lord of the Rings lore as I&amp;rsquo;m reading</description>
    </item>
    
    <item>
      <title>Glossaries for learning in emacs</title>
      <link>https://mullikine.github.io/posts/glossaries-for-learning-in-emacs/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/glossaries-for-learning-in-emacs/</guid>
      <description>Overview of the glossary system Purpose The glossary system is like a wiki system, but more dynamic.
Glossaries can be overlain onto anything &amp;ndash; books, websites, Facebook conversations, code, etc.
The glossary system provides the following abilities:
 Document-specific glossaries Topic-specific glossaries Visual set functions (Union and difference) for glossaries Highlighting to see what has been entered into the glossary already  The glossary system allows me to read, ingest and learn from documents, seeing what I know from a glance.</description>
    </item>
    
    <item>
      <title>CodeCraft: Stacklet - Save Money on the Cloud</title>
      <link>https://mullikine.github.io/posts/codecraft-stacklet-save-money-on-the-cloud/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/codecraft-stacklet-save-money-on-the-cloud/</guid>
      <description>Company website https://stacklet.io/ Open source code https://github.com/cloud-custodian/cloud-custodian     Speaker URL     Tim Penhey https://github.com/howbazaar    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  stacklet.io https://stacklet.io/ Save money on the cloud.</description>
    </item>
    
    <item>
      <title>HashiCorp: Terraform, Vault, Vagrant, Packer</title>
      <link>https://mullikine.github.io/posts/hashicorp/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/hashicorp/</guid>
      <description>Glossary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  packer [hashicorp product] https://www.packer.io/ https://github.com/hashicorp/packer A tool for creating identical machine images for multiple platforms from a single source configuration. Automates the creation of any type of machine image. It embraces modern configuration management by encouraging you to use automated scripts to install and configure the software within your Packer-made images.</description>
    </item>
    
    <item>
      <title>Review of &#39;AWS RoboMaker - Amazon Web Services&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-aws-robomaker-amazon-web-services/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-aws-robomaker-amazon-web-services/</guid>
      <description>Original article AWS RoboMaker - Amazon Web Services  Read  https://aws.amazon.com/robomaker/pricing/ https://docs.aws.amazon.com/robomaker/latest/dg/aws-robomaker-dg.pdf   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  AWS Lambda (serverless compute) Lets you run code without provisioning or managing servers.</description>
    </item>
    
    <item>
      <title>Autoscaling GitLab Runner on AWS</title>
      <link>https://mullikine.github.io/posts/autoscaling-gitlab-runner-on-aws/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/autoscaling-gitlab-runner-on-aws/</guid>
      <description>Summary I design and put together an autoscaling GitLab Runner solution (which scales using EC2 Spot instances), along with a price analysis of options, for deploying ROS2 application source code to GitLab to be built and further deployed.
Creating this article and enabling AWS glossary  Glossary of GitLab CI/CD http://github.com/mullikine/glossaries-gh/blob/master/gitlab.txt   --  I automated the digestion of this reading material  [10/10] Read and done  https://docs.gitlab.com/runner/configuration/autoscale.html https://packages.</description>
    </item>
    
  </channel>
</rss>
