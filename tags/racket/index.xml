<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>racket on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/racket/</link>
    <description>Recent content in racket on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Nov 2017 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/racket/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Practical macros in Racket</title>
      <link>https://mullikine.github.io/posts/practical-macros-in-racket-and-how-to-work-with-them/</link>
      <pubDate>Fri, 17 Nov 2017 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/practical-macros-in-racket-and-how-to-work-with-them/</guid>
      <description>Original article Practical macros in Racket and how to work with them  This is a copy of Kevin R. Stravers article above, formatted in org-mode with some minor changes.
Practical macros in Racket and how to work with them A macro is central in any Lisp and must be mastered in order to master the language. However, Racket is in a state of macro chaos - at least in the official documentation.</description>
    </item>
    
  </channel>
</rss>