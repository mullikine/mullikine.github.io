<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>huggingface on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/huggingface/</link>
    <description>Recent content in huggingface on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Jul 2021 00:00:00 +1200</lastBuildDate><atom:link href="https://mullikine.github.io/tags/huggingface/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pen</title>
      <link>https://mullikine.github.io/posts/pen/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/pen/</guid>
      <description>Summary I start a GitHub project to deploy pen.el.
 Code https://github.com/semiosis/pen.el/ Project timeline and objectives https://github.com/semiosis/pen.el/tree/master/docs  Backstory  Origin https://semiosis.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/ \
https://generative.ink/posts/pen/  Pen facilitates the creation, development, discovery and usage of prompts to a Language Model such as GPT-3 and GPT-j.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  Imagine that you hold a powerful and versatile pen, whose ink flows forth in branching variations of all possible expressions: every story, every theory, poem and every lie that humanity has ever told, and the vast interstices of their latent space.</description>
    </item>
    
    <item>
      <title>Zero-shot NLP in Clojure</title>
      <link>https://mullikine.github.io/posts/zero-shot-nlp-in-clojure/</link>
      <pubDate>Fri, 30 Apr 2021 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/zero-shot-nlp-in-clojure/</guid>
      <description>Original article http://gigasquidsoftware.com/blog/2021/03/15/breakfast-with-zero-shot-nlp/ Code http://github.com/mullikine/zero-shot-nlp   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  (ns zero-shot-nlp.core (:gen-class) (:require [libpython-clj2.require :refer [require-python]] [libpython-clj2.python :as py :refer [py. py.. py.-]])) (require-python &amp;#39;[transformers :bind-ns]) (require &amp;#39;[clojure.pprint :as p]) (use &amp;#39;[clojure.java.shell :only [sh]]) ;; (in-ns &amp;#39;clojure.pprint) (defn -main &amp;#34;I classify stuff.&amp;#34; [&amp;amp; args] ;; import transformers; transformers.</description>
    </item>
    
    <item>
      <title>Quick demo: Summarizing with huggingface, GPT-3 and others</title>
      <link>https://mullikine.github.io/posts/summarizing-with-huggingface-gpt-3-and-others/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/summarizing-with-huggingface-gpt-3-and-others/</guid>
      <description>Demonstration  Summarizing an arxiv paper Automating arxiv Comparing different GPT-3 prompts Configuration with emacs Developing the automations, pipelines and prompts   -- </description>
    </item>
    
    <item>
      <title>Controlled Text Generation</title>
      <link>https://mullikine.github.io/posts/controlled-text-generation/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/controlled-text-generation/</guid>
      <description>Original article https://eng.uber.com/pplm/ https://github.com/uber-research/PPLM https://github.com/huggingface/transformers/blob/master/examples/pplm/README.md Uber AI Plug and Play Language Model  Controlling Text Generation with Plug and Play Language Model (PPLM) PPLM builds on top of other large transformer- based generative models (like GPT-2), where it enables finer-grained control of attributes of the generated language (e.g. gradually switching topic üê± or sentiment üòÉ).
This controlled LG method consists of plugging in simple bag-of-words or one-layer classifiers as attribute controllers, and making updates in the activation space, without changing any model parameters.</description>
    </item>
    
  </channel>
</rss>
