<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>music on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/music/</link>
    <description>Recent content in music on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Oct 2019 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/music/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Music playlists in emacs lisp</title>
      <link>https://mullikine.github.io/posts/music-playlists-in-emacs-lisp/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/music-playlists-in-emacs-lisp/</guid>
      <description>Build the emacs-script command emacs-script is a script to treat emacs lisp as a normal scripting language for the command line.
It loads some basic functionality so we can use emacs lisp for scripting.
Yes, it downloads from youtube and caches the videos.
#!/bin/bash export TTY # This is so I can supply multiple options to emacs in a shebang line QUIET=y sn=&amp;#34;$(basename &amp;#34;$0&amp;#34;)&amp;#34; case &amp;#34;$sn&amp;#34; in emacs-script-debug) { QUIET=n } ;; *) esac while [ $# -gt 0 ]; do opt=&amp;#34;$1&amp;#34;; case &amp;#34;$opt&amp;#34; in -v|-d) { QUIET=n shift } ;; *) break; esac; done script_path=&amp;#34;$1&amp;#34; script_path=&amp;#34;$(p &amp;#34;$script_path&amp;#34; | q -ftln | q -ftln)&amp;#34; # This is redundant now.</description>
    </item>
    
  </channel>
</rss>