<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>uber on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/uber/</link>
    <description>Recent content in uber on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jun 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/uber/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Uber&#39;s queryparser. Parsing and analysis of Vertica, Hive, and Presto SQL</title>
      <link>https://mullikine.github.io/posts/using-uber-s-queryparser/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/using-uber-s-queryparser/</guid>
      <description>Source code https://github.com/uber/queryparser  Running the demo 1  cd &amp;#34;$MYGIT/uber/queryparser&amp;#34;; stack ghci   I will automate the starting of the repl and running of the code  1 2 3 4 5 6 7 8 9 10 11 12  :set prompt &amp;#34;&amp;gt; &amp;#34; import Demo demoAllAnalyses &amp;#34;SELECT * FROM foo&amp;#34; -- note that the SELECT * expands to a,b,c demoAllAnalyses &amp;#34;SELECT * FROM bar&amp;#34; -- and here the SELECT * expands to x,y,z demoAllAnalyses &amp;#34;SELECT x, count(1) FROM foo JOIN bar ON foo.</description>
    </item>
    
    <item>
      <title>Controlled Text Generation</title>
      <link>https://mullikine.github.io/posts/controlled-text-generation/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/controlled-text-generation/</guid>
      <description>Original article https://eng.uber.com/pplm/ https://github.com/uber-research/PPLM https://github.com/huggingface/transformers/blob/master/examples/pplm/README.md Uber AI Plug and Play Language Model  Controlling Text Generation with Plug and Play Language Model (PPLM) PPLM builds on top of other large transformer- based generative models (like GPT-2), where it enables finer-grained control of attributes of the generated language (e.g. gradually switching topic üê± or sentiment üòÉ).
This controlled LG method consists of plugging in simple bag-of-words or one-layer classifiers as attribute controllers, and making updates in the activation space, without changing any model parameters.</description>
    </item>
    
  </channel>
</rss>