<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gpt-3 on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/gpt-3/</link>
    <description>Recent content in gpt-3 on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Mar 2021 00:00:00 +1300</lastBuildDate><atom:link href="https://mullikine.github.io/tags/gpt-3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>crontab.guru in emacs</title>
      <link>https://mullikine.github.io/posts/crontab-guru-in-emacs/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/crontab-guru-in-emacs/</guid>
      <description>When lines in cron format appear in an emacs buffer, the crontab-guru function is suggested, allowing you to easily understand crontabs.
1 2 3 4 5 6 7  (defun buffer-cron-lines () (sor (snc &amp;#34;scrape \&amp;#34;((?:[0-9-/]+|\\\\*)\\\\s+){4}(?:[0-9]+|\\\\*)\&amp;#34;&amp;#34; (buffer-string)))) (defun chrontab-guru (tab) (interactive (list (fz (buffer-cron-lines)))) (let ((tab (sed &amp;#34;s/\\s\\+/_/g&amp;#34; tab))) (chrome (concat &amp;#34;https://crontab.guru/#&amp;#34; tab))))   Demonstration 
  Modify to display the explanation 1 2 3 4 5  (defun crontab-guru (tab) (interactive (list (fz (buffer-cron-lines) (if (selectionp) (my/thing-at-point))))) (let ((tab (sed &amp;#34;s/\\s\\+/_/g&amp;#34; tab))) ;; (chrome (concat &amp;#34;https://crontab.</description>
    </item>
    
    <item>
      <title>Fine-tuning GPT-3</title>
      <link>https://mullikine.github.io/posts/fine-tuning-gpt-3/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/fine-tuning-gpt-3/</guid>
      <description>Notes on GPT-3 fine-tuning http://github.com/mullikine/fine-tuning-gpt-3  Fine-tuning GPT-3 to generate puns Aims Train GPT-3 to continue on sequences of puns Train GPT-3 to speak in puns Training Data    format     jsonl       Sources
 https://github.com/taivop/joke-dataset       Naive approach
1 2 3  [{&amp;#34;data&amp;#34; : &amp;#34;joke set 1&amp;#34;}, {&amp;#34;data&amp;#34;: &amp;#34;joke set 2&amp;#34;}         Better approach</description>
    </item>
    
  </channel>
</rss>
