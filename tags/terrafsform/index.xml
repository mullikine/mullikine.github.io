<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terrafsform on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/terrafsform/</link>
    <description>Recent content in terrafsform on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://mullikine.github.io/tags/terrafsform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review of &#39;Terraform code quality - CloudSkiff&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-terraform-code-quality-cloudskiff/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-terraform-code-quality-cloudskiff/</guid>
      <description>Original article Terraform code quality - CloudSkiff  Terraform code quality starts by the basics with Terraform Validate.
Terraform validate is a subcommand in Terraform that will only address structure and coherence, which means that an obviously bad code like this one will be perfectly right in the eyes of Terraform :
1 2 3 4 5 6 7 8 9 10 11 12 13  provider &amp;#34;aws&amp;#34; { region = &amp;#34;BOGUS&amp;#34; } resource &amp;#34;aws_bogus_resource&amp;#34; &amp;#34;vm&amp;#34; { ami = &amp;#34;BOGUS&amp;#34; instance_type = &amp;#34;BOGUS_TOO&amp;#34; vpc_security_group_ids = [&amp;#34;123456789&amp;#34;] key_name = &amp;#34;BOGUS&amp;#34; tags = { Name = &amp;#34;CNCF London Meetup&amp;#34; } }   1  terraform validate   1  Success!</description>
    </item>
    
  </channel>
</rss>
