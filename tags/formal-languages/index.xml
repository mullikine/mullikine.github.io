<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>formal-languages on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/formal-languages/</link>
    <description>Recent content in formal-languages on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jan 2020 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/formal-languages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review of &#39;Grammars for programming languages - Mikhail Barash - Medium&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-grammars-for-programming-languages-mikhail-barash-medium/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-grammars-for-programming-languages-mikhail-barash-medium/</guid>
      <description>Original article https://medium.com/@mikhail.barash.mikbar/grammars-for-programming-languages-fae3a72a22c6  CFG (context-free grammars) When syntax of programming languages is communicated CGFs are a lingua franca.
They define structure of syntax, but cannot express static semantics.
Limitations Soon after context-free grammars had been introduced, it became apparent that their expressive power is limited.
In 1962, Floyd has shown that Algol is not a context-free language and thus cannot be defined by a context-free grammar.
Context-free grammars define structural syntax of languages, but cannot express any facts about their static semantics (what is called context conditions).</description>
    </item>
    
  </channel>
</rss>