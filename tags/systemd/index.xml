<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>systemd on Bodacious Blog</title>
    <link>http://mullikine.github.io/tags/systemd/</link>
    <description>Recent content in systemd on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0800</lastBuildDate><atom:link href="http://mullikine.github.io/tags/systemd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>systemd masked units</title>
      <link>http://mullikine.github.io/posts/systemd-masked-units/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>http://mullikine.github.io/posts/systemd-masked-units/</guid>
      <description>systemd  systemd masked unit  mask is a stronger version of disable.
Using disable all symlinks of the specified unit file are removed.
If using mask the units will be linked to /dev/null.
This will be displayed if you check e.g. by systemctl status halt.service.
The advantage of mask is to prevent any kind of activation, even manual.
Caution systemctl list-unit-files is listing the state of the unit files (static, enabled, disabled, masked, indirect) and has nothing to do with the state of the service.</description>
    </item>
    
    <item>
      <title>systemd service mode based on chkservice</title>
      <link>http://mullikine.github.io/posts/systemd-service-mode-with-chkservice/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>http://mullikine.github.io/posts/systemd-service-mode-with-chkservice/</guid>
      <description>Code for creating a chkservice mode and assigning a keybinding to it 1 2 3 4 5 6 7 8 9  (defun make-etui-cmd (cmd) &amp;#34;This function expects a one term command (binary name only) and it returns a new interactive function.&amp;#34; (let ((funname (concat &amp;#34;esh-&amp;#34; cmd))) (eval `(defun ,(str2sym funname) (&amp;amp;rest args) &amp;#34;This function expects a one term command (binary name only).&amp;#34; (interactive) (term-nsfa (mapconcat &amp;#39;q (cons ,cmd args) &amp;#34; &amp;#34;) nil ,cmd))))) (define-key my-mode-map (kbd &amp;#34;M-m a y&amp;#34;) (make-etui-cmd &amp;#34;chkservice&amp;#34;))   Also create an external script chkservice wrapper script for starting chkservice with enough privileges 1 2 3 4 5 6 7 8 9 10 11 12  #!</description>
    </item>
    
    <item>
      <title>Review of &#39;Running NixOS in a container on a non-NixOS host? : NixOS&#39;</title>
      <link>http://mullikine.github.io/posts/review-of-running-nixos-in-a-container-on-a-non-nixos-host-nixos/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0800</pubDate>
      
      <guid>http://mullikine.github.io/posts/review-of-running-nixos-in-a-container-on-a-non-nixos-host-nixos/</guid>
      <description>Original article Running NixOS in a container on a non-NixOS host? : NixOS  Instructions to create nixos container https://github.com/NixOS/nixpkgs/issues/9735#issuecomment-370744499
  tested nixos with LXD 2.21
  requires existing nixos system
  create rootfs image from any system running nixOS: 1  nix-build -E &amp;#39;(import &amp;lt;nixpkgs/nixos/release.nix&amp;gt; {}).containerTarball.x86_64-linux&amp;#39;   create lxd image metadata: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  templates/hostname.</description>
    </item>
    
    <item>
      <title>Access logging for systemd service file command</title>
      <link>http://mullikine.github.io/posts/log-service-command/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +1300</pubDate>
      
      <guid>http://mullikine.github.io/posts/log-service-command/</guid>
      <description>Find a service file 1  le service | v   1  v /etc/systemd/system/multi-user.target.wants/ssh.service   It&amp;rsquo;s aliased to:
1  v /etc/systemd/system/sshd.service   nvi 1  v /etc/systemd/system/multi-user.target.wants/nvi.service   1  journalctl -u nvi   -- Logs begin at Thu 2019-12-12 21:51:53 NZDT, end at Fri 2019-12-13 18:25:01 NZDT. -- Dec 12 21:51:54 morgan systemd[1]: Starting Recover nvi edit sessions.... Dec 12 21:51:54 morgan recover[1085]: Recovering nvi editor sessions.</description>
    </item>
    
  </channel>
</rss>
