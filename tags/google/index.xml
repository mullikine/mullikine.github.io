<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/google/</link>
    <description>Recent content in google on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2021 00:00:00 +1300</lastBuildDate><atom:link href="https://mullikine.github.io/tags/google/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Google ngrams in emacs</title>
      <link>https://mullikine.github.io/posts/google-ngrams-in-emacs/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/google-ngrams-in-emacs/</guid>
      <description>Summary I integrate the Google ngram viewer functionality into emacs for suggesting words in context.
Demonstration I demonstrate selecting alternative middle word for the given context words.

Code custom.el configuration
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  (defcustom google-ngrams-corpus &amp;#34;&amp;#34; &amp;#34;Google ngrams corpus&amp;#34; :type &amp;#39;string :group &amp;#39;system-custom :initialize #&amp;#39;custom-initialize-default :options (list &amp;#34;15 # english 2012&amp;#34; &amp;#34;16 # english fiction&amp;#34; &amp;#34;26 # english 2019&amp;#34;) :set (lambda (_sym value) (myrc-set (tr &amp;#34;-&amp;#34; &amp;#34;_&amp;#34; (sym2str _sym)) value) (set _sym (sor value))) ;; The default :initialize is custom-initialize-reset ;; And uses the :set function ;; :initialize (lambda :get (lambda (_sym) (let* ((yaml (yamlmod-read-file &amp;#34;/home/shane/notes/myrc.</description>
    </item>
    
    <item>
      <title>Creating a transient-mode for advanced Google search operators, and GitHub too</title>
      <link>https://mullikine.github.io/posts/creating-a-transient-mode-for-advanced-google-search-operators/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/creating-a-transient-mode-for-advanced-google-search-operators/</guid>
      <description>Synopsis I want to be able to search Google easily using advanced operators, but not have to remember, nor type in, the syntax.
I create a user interface to generate the google search query.
Demonstration Looking for a PDF about the perigee moon, but without the word apogee 
Searching for PDFs about transducers that are not to do with clojure 
Code All it does is, given a list of google operaters, it constructs a little gui, which shells out to a script.</description>
    </item>
    
    <item>
      <title>Review of The Case for Learned Index Structures</title>
      <link>https://mullikine.github.io/posts/review-of-the-case-for-learned-index-structures/</link>
      <pubDate>Mon, 30 Apr 2018 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-the-case-for-learned-index-structures/</guid>
      <description>Authors &amp;ldquo;The Case for Learned Index Structures&amp;rdquo;  Paper code arXiv:1712.0120l8v3 Date &amp;lt;2018-04-30 Mon&amp;gt; URL https://www.arxiv-vanity.com/papers/1712.01208/  Researchers    Tim Kraska MIT Cambridge, MA kraska@mit.edu     Alex Beutel Google, Inc. Mountain View, CA alexbeutel@google.com   Ed H. Chi Google, Inc. Mountain View, CA edchi@google.com   Jeffrey Dean Google, Inc. Mountain View, CA jeff@google.com   Neoklis Polyzotis Google, Inc. Mountain View, CA npolyzotis@google.com    Jeff  Lead of Google.</description>
    </item>
    
  </channel>
</rss>
