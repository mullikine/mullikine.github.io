<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HIL on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/hil/</link>
    <description>Recent content in HIL on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/hil/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review of &#39;What Is Hardware-in-the-Loop? - National Instruments&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-what-is-hardware-in-the-loop-national-instruments/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-what-is-hardware-in-the-loop-national-instruments/</guid>
      <description>Original article What Is Hardware-in-the-Loop? - National Instruments  Why HIL &amp;ndash; The problem to be solved Consider testing the electronic components of a new car.
To remain relevant in todayâ€™s market, modern vehicles need to include ADAS, cameras, radar, and more.
Testing these subsystems on the assembled product in desired use cases ensures that testing is performed in the ideal context, but it also incurs significant test overhead and the challenge of testing every scenario.</description>
    </item>
    
  </channel>
</rss>