<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/terraform/</link>
    <description>Recent content in terraform on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jun 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://mullikine.github.io/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraform Configuration Language</title>
      <link>https://mullikine.github.io/posts/terraform-configuration-language/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/terraform-configuration-language/</guid>
      <description>Original links https://www.terraform.io/docs/configuration/expressions.html  terraform language 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  //Using Locals(available in terraform 0.10.3 or later) &amp;amp; interpolation  locals {//Put all common tags here  common_tags = &amp;#34;${map( &amp;#34;${oci_identity_tag_namespace.tag_namespace1.name}.${oci_identity_tag.tag1.name}&amp;#34;,&amp;#34;value&amp;#34;, &amp;#34;HumanResources.Environment&amp;#34;, &amp;#34;Production&amp;#34;, &amp;#34;Operations.Project&amp;#34;, &amp;#34;Beta&amp;#34; )}&amp;#34; } resource &amp;#34;oci_core_instance&amp;#34; t { . . . freeform_tags = &amp;#34;${map(&amp;#34;key${count.</description>
    </item>
    
    <item>
      <title>Using the terraform linter</title>
      <link>https://mullikine.github.io/posts/using-the-terraform-linter/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/using-the-terraform-linter/</guid>
      <description>TLDR  Create a wrapper script for tflint Search for terraform files Lint them  The point of this blog post is to demonstrate that this process is very quick.
Wrapper script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #!/bin/bash export TTY ( hs &amp;#34;$(basename &amp;#34;$0&amp;#34;)&amp;#34; &amp;#34;$@&amp;#34; &amp;#34;#&amp;#34; &amp;#34;&amp;lt;==&amp;#34; &amp;#34;$(ps -o comm= $PPID)&amp;#34; 0&amp;lt;/dev/null ) &amp;amp;&amp;gt;/dev/null last_arg=&amp;#34;${@: -1}&amp;#34; fp=&amp;#34;$last_arg&amp;#34; if test -f &amp;#34;$fp&amp;#34;; then rp=&amp;#34;$(realpath &amp;#34;$fp&amp;#34;)&amp;#34; bn=&amp;#34;$(basename &amp;#34;$fp&amp;#34;)&amp;#34; dn=&amp;#34;$(dirname &amp;#34;$rp&amp;#34;)&amp;#34; cd &amp;#34;$dn&amp;#34; test &amp;#34;$#&amp;#34; -gt 0 &amp;amp;&amp;amp; set -- &amp;#34;${@:1:$(($#-1))}&amp;#34; # shift last arg set -- &amp;#34;$@&amp;#34; &amp;#34;$bn&amp;#34; fi docker run --rm -v &amp;#34;$(pwd):/$(pwd | slugify)&amp;#34; -w &amp;#34;/$(pwd | slugify)&amp;#34; --entrypoint= wata727/tflint:latest tflint &amp;#34;$@&amp;#34; | strip-ansi   Demonstration</description>
    </item>
    
    <item>
      <title>Facebook Enterprise Platform Engineer interview prep</title>
      <link>https://mullikine.github.io/posts/facebook-enterprise-platform-engineer-interview-prep/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/facebook-enterprise-platform-engineer-interview-prep/</guid>
      <description>Read and Watch from  https://engineering.fb.com/category/production-engineering/  TODO SSP Description Create some diagrams.
Behaviour what&amp;rsquo;s your motivation how do i handle conflict review myself and my CV 45 min each
Email Primer $MYGIT/donnemartin/system-design-primer
Youâ€™ll be interviewed for 45 minutes on each of 5 focal areas:  Coding  You will be asked technical questions which require code or algorithms, so be prepared to show your work and be as concise and efficient as possible with your answers.</description>
    </item>
    
    <item>
      <title>hcl2json</title>
      <link>https://mullikine.github.io/posts/hcl2json/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/hcl2json/</guid>
      <description>Install hcltoo 1  docker pull mycujoo/hcltool   hcl2json (wrapper for hcltool) This tool converts hcl files into a json representation
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  #!/bin/bash export TTY ( hs &amp;#34;$(basename &amp;#34;$0&amp;#34;)&amp;#34; &amp;#34;$@&amp;#34; &amp;#34;#&amp;#34; &amp;#34;&amp;lt;==&amp;#34; &amp;#34;$(ps -o comm= $PPID)&amp;#34; 0&amp;lt;/dev/null ) &amp;amp;&amp;gt;/dev/null # Example # hcltool $HOME/.</description>
    </item>
    
    <item>
      <title>Terraform</title>
      <link>https://mullikine.github.io/posts/terraform/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/terraform/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  Execution Plan Terraform has a &amp;#34;planning&amp;#34; step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply.</description>
    </item>
    
    <item>
      <title>Review of &#39;Ansible and Terraform: Better Together&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-ansible-and-terraform-better-together/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-ansible-and-terraform-better-together/</guid>
      <description>Original article Ansible and Terraform: Better Together  Why do you need more than Ansible? Ansible doesn&amp;rsquo;t necessarily have to own and do every single task that it sets out to do; Like an instrument in an orchestra, others may be better positioned for particular tasks.
Ansible Vault vs Terraform Vault I would assume, since Terraform is a Hashicorp product, then the recommended secret solution would their Vault.
1  ewwlinks +/&amp;#34;The Vault provider allows Terraform to read from, write to, and configure Hashicorp Vault.</description>
    </item>
    
  </channel>
</rss>
