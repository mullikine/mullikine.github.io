<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphql on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/graphql/</link>
    <description>Recent content in graphql on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jun 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/graphql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review of &#39;Introduction to GraphQL | GraphQL&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-introduction-to-graphql-graphql/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-introduction-to-graphql-graphql/</guid>
      <description>Original article Introduction to GraphQL | GraphQL Much better introduction article https://www.graphql-tools.com/docs/generate-schema/     GraphQL is
 a query language for your API, and a server-side runtime for executing queries database agnostic    A GraphQL service is created by
 defining types (Query, User) fields on those types, providing functions for each of the fields in each of the types.    example 1  A GraphQL service that tells us  username name     1 2 3 4 5 6 7 8  type Query { me: User } type User { id: ID name: String }   Serverside javascript API interface This example appears to be missing a function for the id of the User type.</description>
    </item>
    
  </channel>
</rss>