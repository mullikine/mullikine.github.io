<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fp on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/fp/</link>
    <description>Recent content in fp on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Sep 2020 00:00:00 +1200</lastBuildDate><atom:link href="https://mullikine.github.io/tags/fp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review of &#39;Haskell Concepts in One Sentence&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-haskell-concepts-in-one-sentence/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-haskell-concepts-in-one-sentence/</guid>
      <description>Original article Haskell Concepts in One Sentence monad Composed of three functions and encodes control flow which allows pure functions to be strung together. recursive function A function that calls itself inside its own definition. monad transformer allows you to stack more than one monad for use in a function. Lift an operation on a functor that uses fmap to operate on the data contained in the functor. Optics(lens and prisms) allow you to get and set data in a data type.</description>
    </item>
    
    <item>
      <title>Learning PureScript</title>
      <link>https://mullikine.github.io/posts/learning-purescript/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/learning-purescript/</guid>
      <description>Source material Read PureScript by Example | Leanpub \
GitHub - paf31/purescript-book: Sources for the PureScript book \
Hack for backward compatibility | OCaml vs Haskell  1  ewwlinks +/&amp;#34;1.1 Functional JavaScript&amp;#34; &amp;#34;https://leanpub.com/purescript/read#leanpub-auto-functional-javascript&amp;#34;   Type inference is supposed to be used as a tool.
Functional programming is great at:
 data analysis, parsing, compiler implementation, generic programming, parallelism  PureScript provides the ability to import existing JavaScript code, by providing types for its values and functions, and then to use those functions in regular PureScript code.</description>
    </item>
    
  </channel>
</rss>
