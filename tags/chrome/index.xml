<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chrome on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/chrome/</link>
    <description>Recent content in chrome on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jun 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/chrome/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use chrome puppeteer to provide a DOM for emacs eww</title>
      <link>https://mullikine.github.io/posts/use-chrome-puppeteer-to-provide-a-dom-for-emacs-eww/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/use-chrome-puppeteer-to-provide-a-dom-for-emacs-eww/</guid>
      <description>Firstly, create a script for dumping the dom given a url 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  #!/bin/bash export TTY ( hs &amp;#34;$(basename &amp;#34;$0&amp;#34;)&amp;#34; &amp;#34;$@&amp;#34; &amp;#34;#&amp;#34; &amp;#34;&amp;lt;==&amp;#34; &amp;#34;$(ps -o comm= $PPID)&amp;#34; 0&amp;lt;/dev/null ) &amp;amp;&amp;gt;/dev/null test -f /usr/bin/html2xhtml || { agi libhtml-html5-parser-perl } while [ $# -gt 0 ]; do opt=&amp;#34;$1&amp;#34;; case &amp;#34;$opt&amp;#34; in &amp;#34;&amp;#34;) { shift; }; ;; -xml) { TO_XML=y shift } ;; *) break; esac; done url=&amp;#34;$1&amp;#34; test -n &amp;#34;$url&amp;#34; || exit 1 oci unbuffer bash -c &amp;#34;chrome --headless --disable-gpu --dump-dom $(aqf &amp;#34;$url&amp;#34;)2&amp;gt;/dev/null&amp;#34; | { if test &amp;#34;$TO_XML&amp;#34; = &amp;#34;y&amp;#34;; then html2xhtml else cat fi }   I made some tweaks to this function to inject the dumped DOM right before rendering 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  (defun eww-display-html (charset url &amp;amp;optional document point buffer encode) (unless (fboundp &amp;#39;libxml-parse-html-region) (error &amp;#34;This function requires Emacs to be compiled with libxml2&amp;#34;)) (unless (buffer-live-p buffer) (error &amp;#34;Buffer %s doesn&amp;#39;t exist&amp;#34; buffer)) ;; There should be a better way to abort loading images ;; asynchronously.</description>
    </item>
    
  </channel>
</rss>