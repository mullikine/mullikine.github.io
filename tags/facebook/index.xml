<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>facebook on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/facebook/</link>
    <description>Recent content in facebook on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 May 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/facebook/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Technologies Facebook is using</title>
      <link>https://mullikine.github.io/posts/technologies-facebook-is-using/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/technologies-facebook-is-using/</guid>
      <description>From Facebook https://opensource.facebook.com/
Hydra https://github.com/facebookresearch/hydra
1 2 3 4 5 6  Hydra [framework] Elegantly configure complex applications. https://hydra.cc   3rd Party LGTM 1 2 3 4 5 6 7 8  LGTM https://lgtm.com/ Provides &amp;#34;Continuous security analysis&amp;#34;. A code analysis platform for finding zero-days and preventing critical vulnerabilities   CodeQL by GitHub and Semmle // Bodacious Blog</description>
    </item>
    
    <item>
      <title>Using Facebook&#39;s Duckling parser</title>
      <link>https://mullikine.github.io/posts/using-facebook-s-duckling-parser/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/using-facebook-s-duckling-parser/</guid>
      <description>Demonstration 
Obtain the docker image 1  docker pull rasa/duckling   Create duckling-parse script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #!/bin/bash export TTY input=&amp;#34;$(urlencode)&amp;#34; set -m ( unbuffer docker \  run \  --name duckling-container \  --rm \  --network=host \  --entrypoint= \  rasa/duckling:latest \  duckling-example-exe -p 8000 --no-access-log --no-error-log ) &amp;amp;&amp;gt;/dev/null &amp;amp; sleep 2 /usr/bin/curl -XPOST http://0.</description>
    </item>
    
  </channel>
</rss>