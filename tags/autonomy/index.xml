<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>autonomy on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/autonomy/</link>
    <description>Recent content in autonomy on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Feb 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/autonomy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review of &#39;Testing Autonomous Vehicles | LogiGear Blog&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-testing-autonomous-vehicles-logigear-blog/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-testing-autonomous-vehicles-logigear-blog/</guid>
      <description>Original article Testing Autonomous Vehicles | LogiGear Blog  Sensor feedback Sensors are providing the correct feedback, so the AI can be sure to have the correct information to process.
Input giving bad results The architecture of the NN should also be under scrutiny in the testing process.
If input data is consistently giving bad results, the designed models might need a new direction, and we must be willing to adjust it accordingly.</description>
    </item>
    
    <item>
      <title>Review of &#39;Testing strategy for a real time embedded C application&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-testing-strategy-for-a-real-time-embedded-c-application/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-testing-strategy-for-a-real-time-embedded-c-application/</guid>
      <description>Original article Testing strategy for a real time embedded C application  Need portability testing acceptance test characterization tests Technical assessment of the code  visual inspection, running analysis tools, and interviewing the team members  Example result As a result of the assessment, it was established that the code was well written, the only issue being that inter-process communication was inconsistently implemented.
strategy Instead of writing programs, developers write so-called “tasks”, which run according to various policies.</description>
    </item>
    
    <item>
      <title>Writing a gazebo plugin</title>
      <link>https://mullikine.github.io/posts/writing-a-gazebo-plugin/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/writing-a-gazebo-plugin/</guid>
      <description> Reference material Gazebo : Tutorials  </description>
    </item>
    
  </channel>
</rss>