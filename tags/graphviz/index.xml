<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphviz on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/graphviz/</link>
    <description>Recent content in graphviz on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Oct 2019 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/graphviz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Graphviz and Hugo</title>
      <link>https://mullikine.github.io/posts/graphviz/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/graphviz/</guid>
      <description>&amp;#34;low-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;high-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;s1&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s2&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s3&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;high-priority&amp;#34; [label=&amp;#34;wait-time exceeded&amp;#34;]; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;;∘━━━━━━━━━━━━━━━━━━━━━∘ ┃ s1 ┃ ∘━━━━━━━━━━━━━━━━━━━━━∘ ┃ ┃ v ∘━━━━∘ #================================# ∘━━━━∘ ┃ s5 ┃ &amp;lt;━┄┄H low-priority H &amp;lt;━┄┄┃ s2 ┃ ∘━━━━∘ #================================# ∘━━━━∘ ^ ┃ ┃ ^ ┃ ┃ wait-time exceeded ┃ ┃ ┃ v ┃ ┃ ┃ #=====================# ┃ ∘━━━━∘ ∘━━━━━━┄┄H high-priority H ┃ ┃ s3 ┃ #=====================# ┃ ∘━━━━∘ ┃ ┃ ┃ ┃ v ┃ ∘━━━━━━━━━━━━━━━━━━━━━∘ ┃ ┃ s4 ┃ &amp;lt;∘ ∘━━━━━━━━━━━━━━━━━━━━━∘#+BEGIN_SRC dot:filter dot-digraph priority :async :results raw drawer  &amp;#34;low-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;high-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;s1&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s2&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s3&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;high-priority&amp;#34; [label=&amp;#34;wait-time exceeded&amp;#34;]; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;; #+END_SRC   #+BEGIN_SRC dot:filter dot-digraph-ascii-lr :async :results verbatim code  &amp;#34;low-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;high-priority&amp;#34; [shape=&amp;#34;doublecircle&amp;#34; color=&amp;#34;orange&amp;#34;]; &amp;#34;s1&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s2&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;s3&amp;#34; -&amp;gt; &amp;#34;low-priority&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;; &amp;#34;low-priority&amp;#34; -&amp;gt; &amp;#34;high-priority&amp;#34; [label=&amp;#34;wait-time exceeded&amp;#34;]; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s4&amp;#34;; &amp;#34;high-priority&amp;#34; -&amp;gt; &amp;#34;s5&amp;#34;; #+END_SRC∘━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━∘ ┃ ┃ ┃ ∘━━━━∘ #==============# wait-time exceeded #===============# ∘━━━━∘ ┃ ┃ s1 ┃ ━━&amp;gt; H H ━━━━━━━━━━━━━━━━━━━━&amp;gt; H high-priority H ━━&amp;gt; ┃ s4 ┃ ┃ ∘━━━━∘ H H #===============# ∘━━━━∘ ┃ H H ^ ┃ H low-priority H ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━∘ ┃ H H ┃ ∘━━━━∘ H H ∘━━━━━━━━━━━━━━━∘ ┃ ┃ s2 ┃ ━━&amp;gt; H H &amp;lt;━━━━━━━━━━━━━━━━━━━┄┄┃ s3 ┃ ┃ ∘━━━━∘ #==============# ∘━━━━━━━━━━━━━━━∘ ┃ ┃ ┃ ┃ ┃ v ┃ ∘━━━━━━━━━━━━━━∘ ∘━━━━━━━━━━-&amp;gt; ┃ s5 ┃ ∘━━━━━━━━━━━━━━∘</description>
    </item>
    
    <item>
      <title>Compounding Confoundment: arbitrary interpreters for Babel</title>
      <link>https://mullikine.github.io/posts/arbitrary-interpreters-for-babel/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/arbitrary-interpreters-for-babel/</guid>
      <description>Genesis 11:7 “&amp;hellip;Come, let us go down and confuse their language so they will not understand each other.” If supporting many languages in Babel was not confounding enough, lets support arbitrary interpreters too!  The need to specify a custom interpreter arose when I needed to provide my own interpreter for generating an ASCII graph from a dot script.
Objective Specify an :interpreter and/or :filter command to override the execute behaviour.</description>
    </item>
    
  </channel>
</rss>