<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tf on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/tf/</link>
    <description>Recent content in tf on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Dec 2019 00:00:00 +1300</lastBuildDate><atom:link href="https://mullikine.github.io/tags/tf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TensorFlow Debugger (tfdb) and emacs</title>
      <link>https://mullikine.github.io/posts/tensorflow-debugger-tfdb-and-emacs/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/tensorflow-debugger-tfdb-and-emacs/</guid>
      <description>Relevant source material TensorFlow Debugger Screencast - YouTube DebugTFBasics  I plan on building a mode for emacs that includes syntax highlighting and keyboard macros, but I&amp;rsquo;ll have to wait until tfdb is released for TF2.0.
Wrapping TensorFlow Sessions With tfdbg Add the following lines of code to use tfdbg and then contain the Session object using a debugger wrapper.
1  from tensorflow.python import debug as tf_debug    CLI should be called before and after Session.</description>
    </item>
    
    <item>
      <title>TensorFlow BERT</title>
      <link>https://mullikine.github.io/posts/tensorflow-bert-keras/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/tensorflow-bert-keras/</guid>
      <description>Original article Hugging Face: State-of-the-Art Natural Language Processing in ten lines of TensorFlow 2.0  A list of transformer architectures    architecture     BERT   RoBERTa   GPT-2   DistilBERT    pip&amp;rsquo;s transformers library Builds on 3 main classes:  configuration class tokenizer class model class  configuration class Hosts relevant information concerning the model we will be using, such as:</description>
    </item>
    
    <item>
      <title>The Illustrated Transformer</title>
      <link>https://mullikine.github.io/posts/review-of-the-illustrated-transformer/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-the-illustrated-transformer/</guid>
      <description>Original article https://jalammar.github.io/illustrated-transformer/ Source https://github.com/tensorflow/tensor2tensor  Prereading https://jalammar.github.io/illustrated-word2vec/
Helpful glossary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  Multilayer perceptron Feed-Forward Neural Network FFNN Basically, these are multi-level logistic regression classifiers.</description>
    </item>
    
  </channel>
</rss>
