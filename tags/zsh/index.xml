<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zsh on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/zsh/</link>
    <description>Recent content in zsh on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jul 2020 00:00:00 +1200</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/zsh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>M-SPC for running commands in zsh</title>
      <link>https://mullikine.github.io/posts/m-spc-for-running-commands-in-zsh/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/m-spc-for-running-commands-in-zsh/</guid>
      <description>Original article https://asciinema.org/a/3EiPWJHHtwSzS3Zp3UKwwaipV  zshrc config modifications 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # # fz command # bindkey -s &amp;#34;^[ &amp;#34; &amp;#34;^A^Kslmenu\r&amp;#34; function zsh-slmenu() { trap func_trap EXIT func_trap() { tput rc } tput sc exec &amp;lt;/dev/tty slmenu } # M-SPC autoload -z zsh-slmenu zle -N zsh-slmenu bindkey &amp;#34;\e &amp;#34; zsh-slmenu   slmenu script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  #!</description>
    </item>
    
    <item>
      <title>explainshell in zsh</title>
      <link>https://mullikine.github.io/posts/explainshell/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/explainshell/</guid>
      <description>Create the script 1 2 3 4 5 6 7 8 9 10 11 12 13  #!/bin/bash export TTY IFS= read -rd &amp;#39;&amp;#39; input &amp;lt; &amp;lt;(cat /dev/stdin) query=&amp;#34;$(p &amp;#34;$input&amp;#34; | urlencode)&amp;#34; url=&amp;#34;https://explainshell.com/explain?cmd=$query&amp;#34; # echo &amp;#34;$url&amp;#34; exec &amp;lt;&amp;amp;1 eww &amp;#34;$url&amp;#34;   Create the function 1 2 3 4 5 6 7 8 9  function zshexplainshell { tf_zle=&amp;#34;$(mktemp ${TMPDIR}/tf_zleXXXXXX || echo /dev/null)&amp;#34; print -R - &amp;#34;$PREBUFFER$BUFFER&amp;#34; &amp;gt; $tf_zle exec &amp;lt;&amp;amp;1 print -R - &amp;#34;$PREBUFFER$BUFFER&amp;#34; | explainshell print -Rz - &amp;#34;$(&amp;lt;$tf_zle)&amp;#34; zle send-break	# Force reload from the buffer stack }   Create the binding 1 2 3 4  # M-E autoload -z zshexplainshell zle -N zshexplainshell bindkey &amp;#34;\eE&amp;#34; zshexplainshell   Demonstration 1  x -sh &amp;#34;zcd .</description>
    </item>
    
  </channel>
</rss>