<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/math/</link>
    <description>Recent content in math on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Oct 2019 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Just a fun bit of math in my day</title>
      <link>https://mullikine.github.io/posts/fun-math/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/fun-math/</guid>
      <description>Useful mathematical symbols    symbol tex digraph how it reads      &amp;lt;:   is a subtype of    ⊧ \vDash &amp;lt;bar&amp;gt; = entails    ⊢ \vdash &amp;lt;bar&amp;gt; - infers    → \to -&amp;gt; is mapped to maps sets to sets   ↦ \mapsto &amp;lt;bar&amp;gt; &amp;gt; is mapped to maps elements to elements    Euler&amp;rsquo;s Characteristic The second most beautiful equation and its surprising applications - YouTube</description>
    </item>
    
    <item>
      <title>Scripting Mathematica</title>
      <link>https://mullikine.github.io/posts/scripting-mathematica/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +1300</pubDate>
      
      <guid>https://mullikine.github.io/posts/scripting-mathematica/</guid>
      <description>Mathematica keyboard shortcuts https://reference.wolfram.com/language/tutorial/KeyboardShortcutListing.html
shell commands mmadoc Getting documentation with Mathematica code ?Integrate ?WolframAlpha#!/bin/bash export TTY funcname=&amp;#34;$1&amp;#34; mma &amp;#34;?$funcname&amp;#34; mma #!/bin/bash export TTY # Mathematica tf_script=&amp;#34;$(ux tf script wls || echo /dev/null)&amp;#34; trap &amp;#34;rm \&amp;#34;$tf_script\&amp;#34; 2&amp;gt;/dev/null&amp;#34; 0 cat &amp;gt; &amp;#34;$tf_script&amp;#34; &amp;lt;&amp;lt;HEREDOC Print[$@] HEREDOC wolframscript -file &amp;#34;$tf_script&amp;#34; &amp;#34;$@&amp;#34; Example mmadoc Integrate mmadoc WolframAlpha mma &amp;#34;WolframAlpha[\&amp;#34;size of the moon\&amp;#34;]&amp;#34; WolframAlpha[&amp;#34;size of the moon&amp;#34;] wa size of the moon mma &amp;#34;Integrate[5x,x]&amp;#34;Integrate[f, x] gives the indefinite integral ∫ f dx.</description>
    </item>
    
    <item>
      <title>Didactic emacs-lisp macro example (ie. a tutorial)</title>
      <link>https://mullikine.github.io/posts/macro-tutorial/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +1200</pubDate>
      
      <guid>https://mullikine.github.io/posts/macro-tutorial/</guid>
      <description>In this tutorial we build a function b which allows you to run shell code within elisp syntax (it looks like emacs lisp).
This tutorial is useful for learning to write emacs-lisp macros but is also useful for understanding macros of any language.
First some prerequisite functions (defmacro shut-up-c (&amp;amp;rest body) &amp;#34;This works for c functions where shut-up does not.&amp;#34; `(let* ((inhibit-message t)) ,@body)) (defun get-dir () &amp;#34;Gets the current working directory.</description>
    </item>
    
  </channel>
</rss>