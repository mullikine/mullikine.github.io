<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nixos on Bodacious Blog</title>
    <link>https://mullikine.github.io/tags/nixos/</link>
    <description>Recent content in nixos on Bodacious Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://mullikine.github.io/tags/nixos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NixOS vs Docker</title>
      <link>https://mullikine.github.io/posts/nixos-vs-docker/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/nixos-vs-docker/</guid>
      <description>Docker &amp;gt; NixOS but it&amp;rsquo;s in its infancy https://hands-on.cloud/why-you-should-never-ever-use-nixos/
I actually agree with this article.
  I need a functional package manager based on docker or other containerisation software.
  I want access to the registry metadata so I can:
 Use NLP parsers on descriptions. Connect requirements directly to the provisioning pipeline.    </description>
    </item>
    
    <item>
      <title>Review of &#39;Running NixOS in a container on a non-NixOS host? : NixOS&#39;</title>
      <link>https://mullikine.github.io/posts/review-of-running-nixos-in-a-container-on-a-non-nixos-host-nixos/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://mullikine.github.io/posts/review-of-running-nixos-in-a-container-on-a-non-nixos-host-nixos/</guid>
      <description>Original article Running NixOS in a container on a non-NixOS host? : NixOS  Instructions to create nixos container https://github.com/NixOS/nixpkgs/issues/9735#issuecomment-370744499
  tested nixos with LXD 2.21
  requires existing nixos system
  create rootfs image from any system running nixOS: 1  nix-build -E &amp;#39;(import &amp;lt;nixpkgs/nixos/release.nix&amp;gt; {}).containerTarball.x86_64-linux&amp;#39;   create lxd image metadata: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  templates/hostname.</description>
    </item>
    
  </channel>
</rss>